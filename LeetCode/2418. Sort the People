# Problem link -> https://leetcode.com/problems/sort-the-people/description/

"""
You are given an array of strings names, and an array heights that consists of distinct positive integers. Both arrays are of length n.

For each index i, names[i] and heights[i] denote the name and height of the ith person.

Return names sorted in descending order by the people's heights.

 

Example 1:

Input: names = ["Mary","John","Emma"], heights = [180,165,170]
Output: ["Mary","Emma","John"]
Explanation: Mary is the tallest, followed by Emma and John.
Example 2:

Input: names = ["Alice","Bob","Bob"], heights = [155,185,150]
Output: ["Bob","Alice","Bob"]
Explanation: The first Bob is the tallest, followed by Alice and the second Bob.
 

Constraints:

n == names.length == heights.length
1 <= n <= 103
1 <= names[i].length <= 20
1 <= heights[i] <= 105
names[i] consists of lower and upper case English letters.
All the values of heights are distinct.
"""

#########################################################################################
# First submission: 2 Testcases passed, submitted and found that only 6/68 testcases passed at the end. Wrong answer.
# Runtime -> 
# Memory -> 

class Solution:
    def sortPeople(self, names: List[str], heights: List[int]) -> List[str]:
        for i in range(len(heights)):
            if i < len(heights)-1:
                if heights[i]<heights[i+1]:
                    temp = names[i+1]
                    names[i+1] = names[i]
                    names[i] = temp
        return names

# Second submission: Using a third list, sorted it and returned the names.
# Runtime -> 125 ms Beats 23.87%
# Memory -> 16.70 MB Beats 92.44%

class Solution:
    def sortPeople(self, names: List[str], heights: List[int]) -> List[str]:
        res = []
        for i in range(len(names)):
            res.append([heights[i],names[i]])
        res = sorted(res,reverse=True)
        return [name for height,name in res]

# Third submission: One liner using zip
# Runtime -> 125 ms Beats 23.87%
# Memory -> 16.70 MB Beats 92.44%

# Fourth submission: Using zip and sorted.
# Runtime -> 112ms Beats 73.16%
# Memory -> 16.90MB Beats 43.24%
