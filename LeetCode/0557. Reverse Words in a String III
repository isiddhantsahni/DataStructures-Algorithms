# Problem link -> https://leetcode.com/problems/reverse-words-in-a-string-iii/description/

"""
Given a string s, reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.

 

Example 1:

Input: s = "Let's take LeetCode contest"
Output: "s'teL ekat edoCteeL tsetnoc"
Example 2:

Input: s = "Mr Ding"
Output: "rM gniD"
 

Constraints:

1 <= s.length <= 5 * 104
s contains printable ASCII characters.
s does not contain any leading or trailing spaces.
There is at least one word in s.
All the words in s are separated by a single space.
"""

#########################################################################################
# First submission: Using split and join methods.
# Runtime -> 39
ms
Beats
79.94%
# Memory -> 18.06
MB
Beats
18.40%

class Solution:
    def reverseWords(self, s: str) -> str:
        array = s.split(" ")
        for i in range(0,len(array)):
            array[i]=array[i][::-1]
        return (" ").join(array)
