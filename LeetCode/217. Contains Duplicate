# Problem link -> https://leetcode.com/problems/contains-duplicate/

"""
Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.

 

Example 1:

Input: nums = [1,2,3,1]
Output: true
Example 2:

Input: nums = [1,2,3,4]
Output: false
Example 3:

Input: nums = [1,1,1,3,3,4,3,2,4,2]
Output: true
 

Constraints:

1 <= nums.length <= 105
-109 <= nums[i] <= 109

"""

#########################################################################################
# First submission: 
# Runtime -> 538 ms Beats 60.89%
# Memory -> 26 MB Beats 28.25%

# Used a dictionary to check if numbers exists in dict; if it does add 1 to value, else add the number to dict with default value 1.

class Solution:
    def containsDuplicate(self, nums: List[int]) -> bool:

        hmap={}
        for i in nums:
            if i in hmap:
                hmap[i]+=1
            else:
                hmap[i]=1

        for i in hmap.values():
            if i>1:                
                return True
        return False
       
# Second submission: 
# Runtime -> 465 ms Beats 88.41%
# Memory -> 25.9 MB Beats 91.63%

# Optimizing the first solution, while checking if value already exists in dict, then return true. Else return false in the end after loop ends.

class Solution:
    def containsDuplicate(self, nums: List[int]) -> bool:

        diction={}
        for i in nums:
            if i in diction:
                return True
            else:
                diction[i]=1
        return False
