# Problem link -> https://leetcode.com/problems/valid-palindrome/

"""

A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.

Given a string s, return true if it is a palindrome, or false otherwise.

 

Example 1:

Input: s = "A man, a plan, a canal: Panama"
Output: true
Explanation: "amanaplanacanalpanama" is a palindrome.
Example 2:

Input: s = "race a car"
Output: false
Explanation: "raceacar" is not a palindrome.
Example 3:

Input: s = " "
Output: true
Explanation: s is an empty string "" after removing non-alphanumeric characters.
Since an empty string reads the same forward and backward, it is a palindrome.
 

Constraints:

1 <= s.length <= 2 * 105
s consists only of printable ASCII characters.

"""

#########################################################################################
# First submission: First removed alphanumeric characters and used lower() func, returned the boolean of string and its reverse
# Runtime -> 58 ms Beats 52.14%
# Memory -> 17.3 MB Beats 24.63%

class Solution:
    def isPalindrome(self, s: str) -> bool:

        # s = ''.join(c for c in input if c.isalnum())
        final = ''.join(filter(str.isalnum, s))
        final=final.lower()
        return final == final[::-1]
