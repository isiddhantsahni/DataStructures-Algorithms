# Problem link -> https://leetcode.com/problems/two-out-of-three/description/

"""
Given three integer arrays nums1, nums2, and nums3, return a distinct array containing all the values that are present in at least two out of the three arrays. You may return the values in any order.
 

Example 1:

Input: nums1 = [1,1,3,2], nums2 = [2,3], nums3 = [3]
Output: [3,2]
Explanation: The values that are present in at least two arrays are:
- 3, in all three arrays.
- 2, in nums1 and nums2.
Example 2:

Input: nums1 = [3,1], nums2 = [2,3], nums3 = [1,2]
Output: [2,3,1]
Explanation: The values that are present in at least two arrays are:
- 2, in nums2 and nums3.
- 3, in nums1 and nums2.
- 1, in nums1 and nums3.
Example 3:

Input: nums1 = [1,2,2], nums2 = [4,3,3], nums3 = [5]
Output: []
Explanation: No value is present in at least two arrays.
 

Constraints:

1 <= nums1.length, nums2.length, nums3.length <= 100
1 <= nums1[i], nums2[j], nums3[k] <= 100
"""

#########################################################################################
# First submission: Using 3 loops
# Runtime -> 75 ms Beats 48.23%
# Memory -> 16.46 MB Beats 5.13%

class Solution:
    def twoOutOfThree(self, nums1: List[int], nums2: List[int], nums3: List[int]) -> List[int]:
        temp = []
        for i in range(len(nums1)):
            if nums1[i] in nums2 or nums1[i] in nums3:
                if nums1[i] not in temp:
                    temp.append(nums1[i])
       
        for j in range(len(nums2)):
            if nums2[j] in nums1 or nums2[j] in nums3:
                if nums2[j] not in temp:
                    temp.append(nums2[j])
        
        for k in range(len(nums3)):
            if nums3[k] in nums2 or nums3[k] in nums1:
                if nums3[k] not in temp:
                    temp.append(nums3[k])

        return temp

# Second submission: One-liner
# Runtime -> 82 ms Beats 16.60%
# Memory -> 16.34 MB Beats 29.20%

class Solution:
    def twoOutOfThree(self, nums1: List[int], nums2: List[int], nums3: List[int]) -> List[int]:
        return set(nums1) & set(nums2) | set(nums2) & set(nums3) | set(nums1) & set(nums3)
