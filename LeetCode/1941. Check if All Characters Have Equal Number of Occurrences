# Problem link -> https://leetcode.com/problems/check-if-all-characters-have-equal-number-of-occurrences/description/

"""
Given a string s, return true if s is a good string, or false otherwise.

A string s is good if all the characters that appear in s have the same number of occurrences (i.e., the same frequency).

 

Example 1:

Input: s = "abacbc"
Output: true
Explanation: The characters that appear in s are 'a', 'b', and 'c'. All characters occur 2 times in s.
Example 2:

Input: s = "aaabb"
Output: false
Explanation: The characters that appear in s are 'a' and 'b'.
'a' occurs 3 times while 'b' occurs 2 times, which is not the same number of times.
 

Constraints:

1 <= s.length <= 1000
s consists of lowercase English letters.

"""

#########################################################################################
# First submission: Using dictionary
# Runtime -> 36 ms Beats 81.45%
# Memory -> 16.60 MB Beats 58.23%

class Solution:
    def areOccurrencesEqual(self, s: str) -> bool:
        dict1 = {}
        for character in s:
            if character in dict1:
                dict1[character]+=1
            else:
                dict1[character]=1

        old_val = next(iter(dict1.values()))
        for key,val in dict1.items():
            if old_val != val:
                return False
            old_val = val
        return True
