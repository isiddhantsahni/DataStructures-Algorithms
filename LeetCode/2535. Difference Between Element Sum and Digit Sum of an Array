# Problem link -> https://leetcode.com/problems/difference-between-element-sum-and-digit-sum-of-an-array/

"""
You are given a positive integer array nums.

The element sum is the sum of all the elements in nums.
The digit sum is the sum of all the digits (not necessarily distinct) that appear in nums.
Return the absolute difference between the element sum and digit sum of nums.

Note that the absolute difference between two integers x and y is defined as |x - y|.

 

Example 1:

Input: nums = [1,15,6,3]
Output: 9
Explanation: 
The element sum of nums is 1 + 15 + 6 + 3 = 25.
The digit sum of nums is 1 + 1 + 5 + 6 + 3 = 16.
The absolute difference between the element sum and digit sum is |25 - 16| = 9.
Example 2:

Input: nums = [1,2,3,4]
Output: 0
Explanation:
The element sum of nums is 1 + 2 + 3 + 4 = 10.
The digit sum of nums is 1 + 2 + 3 + 4 = 10.
The absolute difference between the element sum and digit sum is |10 - 10| = 0.
 

Constraints:

1 <= nums.length <= 2000
1 <= nums[i] <= 2000
"""

#########################################################################################
# First submission: Adding values to variable based on their length.
# Runtime -> 158 ms Beats 20.03%
# Memory -> 16.65 MB Beats 43.91%

class Solution:
    def differenceOfSum(self, nums: List[int]) -> int:
        sum_ = 0
        single_sum = 0
        
        for i in nums:
            sum_+=i

        for i in nums:
            if len(str(i))==1:
                single_sum+=i
            elif len(str(i))>1:
                split_list = [int(x) for x in str(i)]
                single_sum += sum(split_list)

        return abs(sum_ - single_sum)

# Second submission: Only making single loop for adding values.
# Runtime -> 154 ms Beats 26.25%
# Memory -> 16.64 MB Beats 43.91%

class Solution:
    def differenceOfSum(self, nums: List[int]) -> int:
        sum_ = 0
        single_sum = 0

        for i in nums:
            sum_+=i
            if len(str(i))==1:
                single_sum+=i
            elif len(str(i))>1:
                split_list = [int(x) for x in str(i)]
                single_sum += sum(split_list)

        return abs(sum_ - single_sum)

# Third submission: Making it simpler and concise.
# Runtime -> 129 ms Beats 68.52%
# Memory -> 16.72 MB Beats 11.53%

class Solution:
    def differenceOfSum(self, nums: List[int]) -> int:
        sum1 = sum(nums)
        sum2 = 0
        for i in nums:
            for j in str(i):
                sum2 += int(j)
        return abs(sum1 - sum2)
