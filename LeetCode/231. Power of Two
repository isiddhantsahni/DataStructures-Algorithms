# Problem link -> https://leetcode.com/problems/power-of-two/description/


"""
Given an integer n, return true if it is a power of two. Otherwise, return false.

An integer n is a power of two, if there exists an integer x such that n == 2x.

 

Example 1:

Input: n = 1
Output: true
Explanation: 20 = 1
Example 2:

Input: n = 16
Output: true
Explanation: 24 = 16
Example 3:

Input: n = 3
Output: false
 

Constraints:

-231 <= n <= 231 - 1
 

Follow up: Could you solve it without loops/recursion?
"""

#########################################################################################
# First submission: Bitwise Manipulation.
# Runtime -> 0 ms Beats 100%
# Memory -> 17.61 MB Beats 8.90%

class Solution(object):
    def isPowerOfTwo(self, n):
        if n == 0:
            return False
        else:
            return n and not (n & n - 1)
