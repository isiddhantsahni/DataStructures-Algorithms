# Problem link ->  https://leetcode.com/problems/counting-words-with-a-given-prefix/description/

"""
You are given an array of strings words and a string pref.

Return the number of strings in words that contain pref as a prefix.

A prefix of a string s is any leading contiguous substring of s.

 

Example 1:

Input: words = ["pay","attention","practice","attend"], pref = "at"
Output: 2
Explanation: The 2 strings that contain "at" as a prefix are: "attention" and "attend".
Example 2:

Input: words = ["leetcode","win","loops","success"], pref = "code"
Output: 0
Explanation: There are no strings that contain "code" as a prefix.
 

Constraints:

1 <= words.length <= 100
1 <= words[i].length, pref.length <= 100
words[i] and pref consist of lowercase English letters.
"""

#########################################################################################
# First submission: Checking if string starts with prefix in a loop to get count.
# Runtime -> 43 ms Beats 84.66%
# Memory -> 16.36 MB Beats 53.20%

class Solution:
    def prefixCount(self, words: List[str], pref: str) -> int:
        count = 0
        for word in words:
            if word.startswith(pref):
                count+=1

        return count
        
# Second submission: One-liner
# Runtime -> 50 ms Beats 45.77%
# Memory ->16.50 MB Beats 17.47%

class Solution:
    def prefixCount(self, words: List[str], pref: str) -> int:
        return sum(1 for word in words if word.startswith(pref))
